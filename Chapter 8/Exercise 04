//// chapter8exercise4.cpp : The following is a program skeleton:
//#include <iostream>
//using namespace std;
//#include <cstring> // for strlen(), strcpy()
//struct stringy {
//	char * str; // points to a string
//	int ct; // length of string (not counting '\0')
//};
//// prototypes for set(), show(), and show() go here
//int main()
//{
//	stringy beany;
//	char testing[] = "Reality isn't what it used to be.";
//	set(beany, testing); // first argument is a reference,
//						 // allocates space to hold copy of testing,
//						 // sets str member of beany to point to the
//						 // new block, copies testing to new block,
//						 // and sets ct member of beany
//	show(beany); // prints member string once
//	show(beany, 2); // prints member string twice
//	testing[0] = 'D';
//	testing[1] = 'u';
//	show(testing); // prints testing string once
//	show(testing, 3); // prints testing string thrice
//	show("Done!");
//	return 0;
//}
//Complete this skeleton by providing the described functions and prototypes.Note
//that there should be two show() functions, each using default arguments.Use
//const arguments when appropriate.Note that set() should use new to allocate
//sufficient space to hold the designated string.The techniques used here are similar
//to those used in designing and implementing classes. (You might have to alter the
//	header filenames and delete the using directive, depending on your compiler.)
////

#include "stdafx.h"
#include <iostream>
#include <cstring> // for strlen(), strcpy()

using namespace std;

struct stringy {
	char * str; // points to a string
	int ct; // length of string (not counting '\0')
};
// prototypes for set(), show(), and show() go here
void set(stringy &x, char str2[]);
void show(stringy &x, int repeat = 1);
void show(char str[], int repeat = 1);

int main()
{
	struct stringy beany;
	char testing[] = "Reality isn't what it used to be.";
	set(beany, testing); // first argument is a reference,
						 // allocates space to hold copy of testing,
						 // sets str member of beany to point to the
						 // new block, copies testing to new block,
						 // and sets ct member of beany
	cout << "___________call show function to print string 1 time____" << endl;
	show(beany); // prints member string once
	cout << endl << endl;


	cout << "___________call show function to print string 2 time____" << endl;
	show(beany, 2); // prints member string twice
	testing[0] = 'D';
	testing[1] = 'u';
	cout << endl << endl;


	cout << "___________call show function to print Changed string 1 time____" << endl;
	show(testing); // prints testing string once
	cout << endl << endl;


	cout << "___________call show function to print Changed string 3 time____" << endl;
	show(testing, 3); // prints testing string thrice
	show("Done!");
	return 0;
}

void set(stringy &x, char str2[])
{
	int length = strlen(str2);
	 char*pstr = new char[length+1];
	 strcpy_s(pstr, length + 1, str2);
	 x.str = pstr;
	 
}
void show(stringy &x, int repeat )
{
	for (int i = 0; i < repeat;i++)
	{
		cout << x.str << endl;
	}
	
}

void show(char str[], int repeat)
{
	for (int i = 0; i < repeat;i++)
	{
		cout << str << endl;
	}
	
}
